{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/scripts/biggo-right.js","webpack:///./src/scripts/biggo-left.js","webpack:///./src/scripts/biggo-front.js","webpack:///./src/scripts/bean.js","webpack:///./src/scripts/cup.js","webpack:///./src/scripts/cafe.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","BiggoRight","ctx","canvasEle","this","moveRight","x","y","biggoRight","Image","src","onload","clearRect","drawImage","height","width","requestAnimationFrame","BiggoLeft","moveLeft","biggoLeft","BiggoFront","idx","biggoFrontN","biggoButt","biggoFrontC","Bean","userTargetNum","posX","posY","font","strokeStyle","fillText","soloBean","Cup","drawCup","translate","save","scale","lineWidth","beginPath","arc","Math","PI","fillStyle","fill","stroke","restore","moveTo","arcTo","Cafe","generateSortedArr","numCups","placeCups","placeBeans","currentSortedArr","setTimeout","placeBeanNums1","placeBeanNums2","placeCupNums1","placeCupNums2","targetButton","document","getElementById","onclick","e","preventDefault","disabled","currentTargetNum","Number","answerIndex","binarySearch","undefined","isNaN","console","log","drawRandEle","biggoFront","drawBiggoFront","num","sortedArr","length","randNum","floor","random","includes","push","sort","a","b","coffeeCup","allCups","allBeans","drawBean","element","ele","sortedArray","target","midIndex","slice","rightSide","addEventListener","modal","style","display","getContext"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","class BiggoRight {\n\n    constructor(ctx, canvasEle) {\n        this.ctx = ctx;\n        this.canvasEle = canvasEle;\n\n        this.moveRight = this.moveRight.bind(this);\n        this.x = -800;\n        this.y = 710;\n    }\n    \n    moveRight() {    \n        let biggoRightPath = \"src/images/corgi-right.png\";\n        let biggoRight = new Image();\n        biggoRight.src = biggoRightPath;\n        biggoRight.onload = () => {\n            // this.ctx.fillRect(-500, 200, 2000, 180);\n            this.ctx.clearRect(-500, this.y + 7, 2000, 180);\n            this.ctx.drawImage(biggoRight, this.x, this.y, 300, 300 * biggoRight.height / biggoRight.width);\n        };\n        this.x += 6;\n        requestAnimationFrame(this.moveRight);\n    }\n    \n}\n\nexport default BiggoRight;\n","class BiggoLeft {\n\n    constructor(ctx, canvasEle) {\n        this.ctx = ctx;\n        this.canvasEle = canvasEle;\n        // this.ctx.translate(0, 0);\n\n        this.moveLeft = this.moveLeft.bind(this);\n        this.x = 950;\n        this.y = 710;\n    }\n\n    moveLeft() {\n        let biggoLeftPath = \"src/images/corgi-left.png\";\n        let biggoLeft = new Image();\n        biggoLeft.src = biggoLeftPath;\n        biggoLeft.onload = () => {\n            // this.ctx.fillRect(this.x, this.y, 295, 295 * biggoLeft.height / biggoLeft.width);\n            this.ctx.clearRect(-500, this.y + 7, 2000, 170);\n            this.ctx.drawImage(biggoLeft, this.x, this.y, 295, 295 * biggoLeft.height / biggoLeft.width);\n        };\n        this.x -= 6;\n\n        const animationID = requestAnimationFrame(this.moveLeft);\n        \n        // setTimeout(() => {\n        //     cancelAnimationFrame(animationID); \n\n        // }, 8);\n\n\n    }\n\n    // clearBiggo() {\n    //     cancelAnimationFrame(this.moveLeft);\n    // }\n\n}\n\nexport default BiggoLeft;\n","// const POSITIONS = {\n//     ROW1_X: 10,\n//     ROW1_Y: 150,\n//     ROW2_X: 10,\n//     ROW3_Y: 350,\n// };  \n\nclass BiggoFront {\n\n    constructor(ctx, canvasEle) {\n\n        this.ctx = ctx;\n        this.canvasEle = canvasEle;\n\n        // let biggoFrontSPath = \"src/images/corgi-front-tongue-smile.png\";\n        // let biggoFrontS = new Image();\n        // biggoFrontS.src = biggoFrontSPath;\n        // biggoFrontS.onload = () => {\n        //     ctx.drawImage(biggoFrontS, x + 200, y, size, size * biggoFrontS.height / biggoFrontS.width);\n        // };\n\n    }\n\n    // 1) FIRST CHECK IDX5ELE\n    //     IF TARGETNUM < IDX5ELE\n    //         CHECK IDX2ELE;\n    //                 IF TARGET NUM < IDX2ELE\n    //                     CHECK IDX0ELE\n    //                 ELSIF TARGET NUM > IDX2ELE \n    //                     CHECK IDX1ELE\n    //                 ELSIF TARGET NUM == IDX2ELE\n    //                     STAY AT IDX2ELE!!!\n    //     ELSIF TARGET NUM > IDX5ELE\n    //         CHECK IDX8ELE;\n    //                 IF TARGET NUM < IDX8ELE\n    //                     CHECK IDX6ELE\n    //                 ELSIF TARGET NUM > IDX8ELE\n    //                     CHECK IDX10ELE\n    //                 ELSIF TARGET NUM == IDX8ELE\n    //                     STAY AT IDX8ELE;\n    //     ELSIF TARGET NUM == IDX5ELE\n    //         STAY AT IDX5!!!;\n\n\n\n    drawBiggoFront(idx){\n        let size = 120;\n        // let x = 0;\n        // let y = 0;\n\n        // debugger;\n        if (idx === 0) {\n            let x = -310;\n            let y = 200;\n            let biggoFrontNPath = \"src/images/corgi-front-neutral.png\";\n            let biggoFrontN = new Image();\n            biggoFrontN.src = biggoFrontNPath;\n            biggoFrontN.onload = () => {\n                this.ctx.drawImage(biggoFrontN, x, y, size, size * biggoFrontN.height / biggoFrontN.width);\n            };\n        } else if (idx === 1) {\n            let x = -165;\n            let y = 200;\n            let biggoFrontNPath = \"src/images/corgi-front-neutral.png\";\n            let biggoFrontN = new Image();\n            biggoFrontN.src = biggoFrontNPath;\n            biggoFrontN.onload = () => {\n                this.ctx.drawImage(biggoFrontN, x, y, size, size * biggoFrontN.height / biggoFrontN.width);\n            };\n        } else if (idx === 2) {\n            let x = -15;\n            let y = 200;\n            let biggoFrontNPath = \"src/images/corgi-front-neutral.png\";\n            let biggoFrontN = new Image();\n            biggoFrontN.src = biggoFrontNPath;\n            biggoFrontN.onload = () => {\n                this.ctx.drawImage(biggoFrontN, x, y, size, size * biggoFrontN.height / biggoFrontN.width);\n            };\n        } else if (idx === 3) {\n            let x = 135;\n            let y = 200;\n            let biggoFrontNPath = \"src/images/corgi-front-neutral.png\";\n            let biggoFrontN = new Image();\n            biggoFrontN.src = biggoFrontNPath;\n            biggoFrontN.onload = () => {\n                this.ctx.drawImage(biggoFrontN, x, y, size, size * biggoFrontN.height / biggoFrontN.width);\n            };\n        } else if (idx === 4) {\n            let x = 285;\n            let y = 200;\n            let biggoFrontNPath = \"src/images/corgi-front-neutral.png\";\n            let biggoFrontN = new Image();\n            biggoFrontN.src = biggoFrontNPath;\n            biggoFrontN.onload = () => {\n                this.ctx.drawImage(biggoFrontN, x, y, size, size * biggoFrontN.height / biggoFrontN.width);\n            };\n        } else if (idx === 5) {\n            let x = 435;\n            let y = 200;\n            let biggoFrontNPath = \"src/images/corgi-front-neutral.png\";\n            let biggoFrontN = new Image();\n            biggoFrontN.src = biggoFrontNPath;\n            biggoFrontN.onload = () => {\n                this.ctx.drawImage(biggoFrontN, x, y, size, size * biggoFrontN.height / biggoFrontN.width);\n            };\n        } else if (idx === 6) {\n            let x = -310;\n            let y = 459;\n            let biggoFrontNPath = \"src/images/corgi-front-neutral.png\";\n            let biggoFrontN = new Image();\n            biggoFrontN.src = biggoFrontNPath;\n            biggoFrontN.onload = () => {\n                this.ctx.drawImage(biggoFrontN, x, y, size, size * biggoFrontN.height / biggoFrontN.width);\n            };\n        } else if (idx === 7) {\n            let x = -165;\n            let y = 459;\n            let biggoFrontNPath = \"src/images/corgi-front-neutral.png\";\n            let biggoFrontN = new Image();\n            biggoFrontN.src = biggoFrontNPath;\n            biggoFrontN.onload = () => {\n                this.ctx.drawImage(biggoFrontN, x, y, size, size * biggoFrontN.height / biggoFrontN.width);\n            };\n        } else if (idx === 8) {\n            let x = -15;\n            let y = 459;\n            let biggoFrontNPath = \"src/images/corgi-front-neutral.png\";\n            let biggoFrontN = new Image();\n            biggoFrontN.src = biggoFrontNPath;\n            biggoFrontN.onload = () => {\n                this.ctx.drawImage(biggoFrontN, x, y, size, size * biggoFrontN.height / biggoFrontN.width);\n            };\n        } else if (idx === 9) {\n            let x = 135;\n            let y = 459;\n            let biggoFrontNPath = \"src/images/corgi-front-neutral.png\";\n            let biggoFrontN = new Image();\n            biggoFrontN.src = biggoFrontNPath;\n            biggoFrontN.onload = () => {\n                this.ctx.drawImage(biggoFrontN, x, y, size, size * biggoFrontN.height / biggoFrontN.width);\n            };\n        } else if (idx === 10) {\n            let x = 285;\n            let y = 459;\n            let biggoFrontNPath = \"src/images/corgi-front-neutral.png\";\n            let biggoFrontN = new Image();\n            biggoFrontN.src = biggoFrontNPath;\n            biggoFrontN.onload = () => {\n                this.ctx.drawImage(biggoFrontN, x, y, size, size * biggoFrontN.height / biggoFrontN.width);\n            };\n        } else if (idx === 11) {\n            let x = 435;\n            let y = 459;\n            let biggoFrontNPath = \"src/images/corgi-front-neutral.png\";\n            let biggoFrontN = new Image();\n            biggoFrontN.src = biggoFrontNPath;\n            biggoFrontN.onload = () => {\n                this.ctx.drawImage(biggoFrontN, x, y, size, size * biggoFrontN.height / biggoFrontN.width);\n            };\n        }\n    }\n\n\n    drawBiggoButt(){\n        let x = 0;\n        let y = 700;\n        let size = 120;\n        let biggoButtPath = \"src/images/corgi-butt.png\";\n        let biggoButt = new Image();\n        biggoButt.src = biggoButtPath;\n        biggoButt.onload = () => {\n            ctx.drawImage(biggoButt, x - 200, y, size, size * biggoButt.height / biggoButt.width);\n        };\n    }\n\n    drawBiggoClosed(){\n        let x = 0;\n        let y = 700;\n        let size = 120;\n        let biggoFrontCPath = \"src/images/corgi-front-neutral.png\";\n        let biggoFrontC = new Image();\n        biggoFrontC.src = biggoFrontCPath;\n        biggoFrontC.onload = () => {\n            ctx.drawImage(biggoFrontC, x + 400, y, size, size * biggoFrontC.height / biggoFrontC.width);\n        };\n    }\n\n}\n\nexport default BiggoFront;\n","class Bean {\n\n    constructor(ctx, canvasEle, userTargetNum){\n        this.ctx = ctx;\n        this.canvasEle = canvasEle;\n    }\n\n\n    drawBean(ctx, posX, posY){\n        // let posX = -500;\n        // let posY = 150;\n\n        ctx.font = '14px Rubik';\n        ctx.strokeStyle = \"rgb(0, 0, 0)\";\n        ctx.fillText(\"bean id #\", 495, 30)\n\n        let soloBeanPath = \"src/images/solo-bean-glow.png\";\n        let soloBean = new Image();\n        soloBean.src = soloBeanPath;\n        soloBean.onload = () => {\n            ctx.drawImage(soloBean, posX, posY, 40, 40 * soloBean.height / soloBean.width);\n        };\n    }\n\n}\n\nexport default Bean;","import Bean from \"./bean\";\n\nclass Cup {\n\n    constructor(ctx, canvasEle){\n        this.ctx = ctx;\n        this.canvasEle = canvasEle;\n        // this.posX = 400;\n        // this.posY = 50;\n        // ctx.translate(550, 0);\n        this.drawCup(ctx);\n    }\n\n\n    createCupIndex() {\n        \n    }\n\n    drawCup(ctx, posX, posY) {\n        ctx.translate(posX, posY);\n        ctx.strokeStyle = \"rgb(58, 24, 24)\";\n        // ctx.translate(250, 10);\n\n\n        // \ttop outer black ring and white fill\t\n        ctx.save();\n        ctx.translate(0, 0);\n        ctx.scale(2, 0.4);\n        ctx.lineWidth = 3.5;\n        ctx.beginPath();\n        ctx.arc(0, 0, 25, 0, 2 * Math.PI, false);\n        ctx.fillStyle = \"#ffffff\";\n        ctx.fill();\n        ctx.stroke();\n        ctx.restore();\n\n\n\n        // \ttop inner black ring\n        ctx.save();\n        // ctx.translate(0, 0);\n        ctx.scale(2, 0.4);\n        ctx.lineWidth = 1.5;\n        ctx.beginPath();\n        ctx.arc(0, 0, 18, 0, 2 * Math.PI, false);\n        ctx.fillStyle = \"rgb(58, 24, 24)\";\n        ctx.fill();\n        ctx.stroke();\n        ctx.restore();\n\n\n\n        //reflection ring\n        ctx.save();\n        ctx.translate(0, 10);\n        ctx.scale(0.8, 0.15);\n        ctx.lineWidth = 1;\n        ctx.beginPath();\n        ctx.arc(0, 0, 50, 0, 1 * Math.PI, false);\n        ctx.fillStyle = \"#ffffff\";\n        ctx.fill();\n        ctx.stroke();\n        ctx.restore();\n\n        // \tleft line of cup\n        ctx.beginPath();\n        ctx.moveTo(-50, 0);\n        ctx.arcTo(-45, 45, 70, 115, 60);\n        ctx.lineWidth = 5;\n        ctx.fillStyle = \"#ffffff\";\n        ctx.fill();\n        ctx.stroke();\n\n        // \tright line of cup\n        ctx.beginPath();\n        ctx.moveTo(50, 0);\n        ctx.arcTo(45, 43, 28, 55, 69);\n        ctx.lineWidth = 5;\n        ctx.fillStyle = \"#ffffff\";\n        ctx.fill();\n        ctx.stroke();\n        // ctx.restore();\n\n        //bottom black ring\n        ctx.save();\n        ctx.translate(0, 59);\n        ctx.scale(1, 0.2);\n        ctx.lineWidth = 12;\n        ctx.beginPath();\n        ctx.arc(0, 0, 21, 0, 1 * Math.PI, false);\n        ctx.fillStyle = \"#ffffff\";\n        ctx.fill();\n        ctx.stroke();\n        ctx.restore();\n    }\n\n};\n\nexport default Cup; ","import BiggoRight from \"./biggo-right\";\nimport BiggoLeft from \"./biggo-left\";\nimport BiggoFront from \"./biggo-front\";\nimport Cup from \"./cup\";\nimport Bean from \"./bean\";\n\nclass Cafe {\n    constructor(ctx, canvasEle) {\n        this.ctx = ctx;\n        this.canvasEle = canvasEle;\n        this.generateSortedArr = this.generateSortedArr.bind(this);\n\n        // PLACE THE CUPS ON CANVAS\n        this.numCups = 10;\n        this.ctx.translate(0, 100);\n        this.placeCups(this.ctx, this.canvasEle);\n        this.ctx.translate(-850, 50);\n        this.placeCups(this.ctx, this.canvasEle);\n        this.ctx.translate(-500, -650);\n        this.ctx.restore();\n\n        // PLACE THE BEANS ON CANVAS\n        this.placeBeans(this.ctx, this.canvasEle, 372);\n        this.placeBeans(this.ctx, this.canvasEle, 630);\n\n        // GENERATE A SORTED ARRAY OF RANDOM NUMBERS FROM 0 TO 99\n        const currentSortedArr = this.generateSortedArr(12);\n\n        // PLACE NUMBERS FROM SORTED ARRAY ONTO BEANS\n        setTimeout(() => {\n            this.placeBeanNums1(currentSortedArr, 396);\n            this.placeBeanNums2(currentSortedArr, 657);\n        }, 500);\n\n        // PLACE NUMBERS ON CUPS\n        this.placeCupNums1(445);\n        this.placeCupNums2(697);\n\n        // RESET ARRAY BUTTON CLICK HANDLER\n        // resetButton.onclick = (e) => {\n        //     e.preventDefault();\n        //     this.ctx.clearRect(0, 0, 500, 500);\n        // };\n\n        // SUBMIT BUTTON CLICK HANDLER: GRAB USER INPUT NUMBER\n        let targetButton = document.getElementById(\"submit-button\");\n\n        targetButton.onclick = (e) => {\n          e.preventDefault();\n\n          targetButton.disabled = true; //CAN'T CLICK SUBMIT BUTTON MORE THAN ONCE\n\n          let userTargetNum = Number(\n            document.getElementById(\"user-target-num\").value\n          ); //converts input string to number\n\n          let currentTargetNum = userTargetNum;\n          const biggoLeft = new BiggoLeft(this.ctx, this.canvasEle);\n          biggoLeft.moveLeft();\n          const biggoRight = new BiggoRight(this.ctx, this.canvasEle);\n          setTimeout(() => {\n            biggoRight.moveRight();\n          }, 4500);\n\n          // const randomTargetNum = this.selectRandEle(currentSortedArr); //to implement a random target number button in the future\n\n          //Actually use bSearch on array and user's current target num if they submitted an actual number\n          const answerIndex = this.binarySearch(\n            currentSortedArr,\n            currentTargetNum\n          );\n\n          if (answerIndex === undefined || Number.isNaN(answerIndex) ) {\n                //WHEN NON-NUMBERS/NaN IS SUBMITTED\n                console.log(\"Input not found in array.\");\n                setTimeout(() => {\n                    this.drawRandEle(\"Biggo searched, but did not find the input \" + document.getElementById(\"user-target-num\").value + \".\", -90, 167);\n                }, 9000);\n\n          } else {\n                this.drawRandEle(\n                    \"Biggo is currently searching for this bean (target number): Bean \" +\n                    currentTargetNum +\n                    \".\",\n                    -330,\n                    140\n                );\n          \n          // this.drawRandEle(\"Answer: Which index houses the target number (Bean \" + currentTargetNum + \")? Cup \" + answerIndex + \".\", -330, 196);\n          this.drawRandEle(\n            \"Which cup (index position) houses Bean \" + currentTargetNum + \"?\",\n            -330,\n            167\n          );\n\n            // front-facing biggo appears in front of correct answer index/bean/cup\n            const biggoFront = new BiggoFront(this.ctx, this.canvasEle);\n            setTimeout(() => {\n              biggoFront.drawBiggoFront(answerIndex);\n              this.drawRandEle(\"Answer: Cup \" + answerIndex + \".\", 340, 167);\n            }, 9000);\n\n            // this.drawSortedArray(currentSortedArr, -130, 195); //CODE FOR SHOWING ACTUAL ARRAY AT TOP.\n          }\n        };\n\n        \n    }\n\n\n\n    generateSortedArr(num) {\n        const sortedArr = [];\n\n        while (sortedArr.length < num) {\n            let randNum = Math.floor(Math.random() * 99)\n\n            if (!sortedArr.includes(randNum)) {\n                sortedArr.push(randNum);\n            }\n        }\n        return sortedArr.sort(function (a, b) { return a - b });\n    }\n\n    drawSortedArray(sortedArr, x, y){\n        this.ctx.font = '18px Rubik';\n        this.ctx.fillStyle = \"rgb(58, 24, 24)\";\n        this.ctx.fillText('Menu Array: [' + sortedArr + ']', x, y);\n    }\n\n\n    placeCups(ctx, canvasEle) {\n        ctx.translate(100, 200);\n        const coffeeCup = new Cup(ctx, canvasEle);\n\n        let allCups = [];\n\n        for (let i = 0; i < this.numCups; i++) {\n            allCups.push(coffeeCup);\n            if (i < (this.numCups / 2)) {\n                allCups[i].drawCup(ctx, 150, 0);\n            } //else {\n            // ctx.save();\n            //console.log(allCups[i]);\n            //allCups[i].drawCup(ctx, -100, 50);\n            //}\n        }\n        ctx.restore();\n    }\n\n    placeCupNums1(y) {\n        let x = -256;\n        this.ctx.fillStyle = \"#000000\";\n        for (let i = 0; i < 6; i++) {\n            this.ctx.fillText(i, x, y);\n            x += 150;\n        }\n    }\n\n    placeCupNums2(y) {\n        let x = -256;\n        this.ctx.fillStyle = \"#000000\";\n        for (let i = 6; i < 12; i++) {\n            this.ctx.fillText(i, x, y);\n            x += 150;\n        }\n    }\n\n    placeBeans(ctx, canvasEle, y) {\n        const soloBean = new Bean(ctx, canvasEle);\n        let allBeans = [];\n        let x = -270;\n        for (let i = 0; i < 6; i++) {\n            allBeans.push(soloBean);\n            allBeans[i].drawBean(ctx, x, y);\n            x += 151;\n        }\n    }\n    \n    placeBeanNums1(sortedArr, y) {\n        let x = -258;\n        this.ctx.fillStyle = \"#ffffff\";\n        this.ctx.font = '20px Rubik';\n        for (let i = 0; i < sortedArr.length/2 ; i++) {\n            const element = sortedArr[i];\n            // this.ctx.fillStyle = \"#ffffff\";\n            this.ctx.fillText(element, x, y);\n            x += 150;\n        }\n    }\n\n    placeBeanNums2(sortedArr, y) {\n        let x = -260;\n        this.ctx.fillStyle = \"#ffffff\";\n\n        for (let i = sortedArr.length / 2; i < sortedArr.length; i++) {\n            const element = sortedArr[i];\n            this.ctx.fillText(element, x, y);\n            x += 151;\n        }\n    }\n\n    selectRandEle(sortedArr) {\n        //select rand idx\n        const idx = Math.floor(Math.random() * sortedArr.length);\n        return sortedArr[idx];\n    }\n\n    drawRandEle(ele, x, y) {\n        this.ctx.fillStyle = \"rgb(58, 24, 24)\";\n        this.ctx.font = '18px Rubik';\n        this.ctx.fillText(ele, x, y);\n    }\n\n    binarySearch(sortedArray, target) {\n        // if (sortedArray.length === 0) {\n        //     return -1;\n        // }\n        // this.ctx.fillText(sortedArray, -280, 160);\n\n        console.log(sortedArray);\n        const midIndex = Math.floor(sortedArray.length / 2); //For JS, if we half an odd number, it'll return a decimal, so we're using Math.floor to round down to a whole number\n\n\n        if (sortedArray[midIndex] === target) {\n            // biggoFront.drawBiggoFront(midIndex); //This is a twelve cup array, so we'll start at the midIndex of cup 5\n            \n            // debugger;\n            return midIndex;\n\n\n\n        } else if (sortedArray[midIndex] > target) {\n            // biggoFront.drawBiggoFront(midIndex);\n            return this.binarySearch(sortedArray.slice(0, midIndex), target);\n\n\n\n\n        } else if (sortedArray[midIndex] < target) {\n            const rightSide = this.binarySearch(sortedArray.slice(midIndex + 1), target);\n            if (rightSide === -1) {\n                return -1;\n            } else {\n                const finalIdx = rightSide + midIndex + 1;\n                // biggoFront.drawBiggoFront(finalIdx);\n                // debugger;\n                return finalIdx;\n            }\n        }\n\n\n    }\n\n\n\n\n}\n\n\nexport default Cafe;","import './styles/index.scss';\nimport Cafe from \"./scripts/cafe\";\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n\n    const modal = document.getElementById(\"modal\");\n    const closeModalBtn = document.getElementById(\"close-modal-icon\");\n    closeModalBtn.onclick = () => {\n        modal.style.display = \"none\"; //hide modal from document\n    };\n\n    const openModalBtn = document.getElementById(\"open-modal-icon\");\n    openModalBtn.onclick = () => {\n        modal.style.display = \"block\";\n    };\n\n    const canvasEle = document.getElementById('cc-cafe');\n    canvasEle.width = 1000;\n    canvasEle.height = 800;\n    const ctx = canvasEle.getContext('2d');\n    const caf = new Cafe(ctx, canvasEle);\n\n});"],"sourceRoot":""}